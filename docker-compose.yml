version: '3.8'

services:
  # MySQL 数据库
  mysql:
    image: mysql:8.0
    container_name: img-prompts-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: ${MYSQL_ROOT_PASSWORD:-change_me_in_production}
      MYSQL_DATABASE: img_generate_prompts
      MYSQL_USER: img_prompts_user
      MYSQL_PASSWORD: ${MYSQL_PASSWORD:-change_me_in_production}
    ports:
      - "3307:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./scripts/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    command: --default-authentication-plugin=mysql_native_password
    networks:
      - img-prompts-network
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis 缓存 (可选)
  redis:
    image: redis:7-alpine
    container_name: img-prompts-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - img-prompts-network
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 3s
      retries: 3

  # API 应用
  api:
    build: .
    container_name: img-prompts-api
    restart: unless-stopped
    ports:
      - "8080:8080"
    volumes:
      - ./uploads:/root/uploads
      - ./logs:/root/logs
      - ./apikey:/root/apikey:ro
    depends_on:
      mysql:
        condition: service_healthy
    environment:
      - GIN_MODE=release
    networks:
      - img-prompts-network
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/health"]
      interval: 30s
      timeout: 3s
      retries: 3
      start_period: 40s

  # Nginx 反向代理 (可选)
  nginx:
    image: nginx:alpine
    container_name: img-prompts-nginx
    restart: unless-stopped
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf:ro
      - ./ssl:/etc/nginx/ssl:ro
    depends_on:
      - api
    networks:
      - img-prompts-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local

networks:
  img-prompts-network:
    driver: bridge
